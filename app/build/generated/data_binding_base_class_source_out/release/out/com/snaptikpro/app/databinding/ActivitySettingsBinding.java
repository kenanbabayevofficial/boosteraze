// Generated by view binder compiler. Do not edit!
package com.snaptikpro.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.snaptikpro.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final RadioButton rbHD;

  @NonNull
  public final RadioButton rbSD;

  @NonNull
  public final RadioGroup rgQuality;

  @NonNull
  public final Switch switchAutoDownload;

  @NonNull
  public final LinearLayout tvAbout;

  @NonNull
  public final LinearLayout tvClearHistory;

  @NonNull
  public final LinearLayout tvPrivacyPolicy;

  @NonNull
  public final LinearLayout tvRateApp;

  @NonNull
  public final LinearLayout tvShareApp;

  @NonNull
  public final LinearLayout tvTermsOfService;

  @NonNull
  public final TextView tvVersion;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout headerLayout, @NonNull ImageView ivBack, @NonNull RadioButton rbHD,
      @NonNull RadioButton rbSD, @NonNull RadioGroup rgQuality, @NonNull Switch switchAutoDownload,
      @NonNull LinearLayout tvAbout, @NonNull LinearLayout tvClearHistory,
      @NonNull LinearLayout tvPrivacyPolicy, @NonNull LinearLayout tvRateApp,
      @NonNull LinearLayout tvShareApp, @NonNull LinearLayout tvTermsOfService,
      @NonNull TextView tvVersion) {
    this.rootView = rootView;
    this.headerLayout = headerLayout;
    this.ivBack = ivBack;
    this.rbHD = rbHD;
    this.rbSD = rbSD;
    this.rgQuality = rgQuality;
    this.switchAutoDownload = switchAutoDownload;
    this.tvAbout = tvAbout;
    this.tvClearHistory = tvClearHistory;
    this.tvPrivacyPolicy = tvPrivacyPolicy;
    this.tvRateApp = tvRateApp;
    this.tvShareApp = tvShareApp;
    this.tvTermsOfService = tvTermsOfService;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.headerLayout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.rbHD;
      RadioButton rbHD = ViewBindings.findChildViewById(rootView, id);
      if (rbHD == null) {
        break missingId;
      }

      id = R.id.rbSD;
      RadioButton rbSD = ViewBindings.findChildViewById(rootView, id);
      if (rbSD == null) {
        break missingId;
      }

      id = R.id.rgQuality;
      RadioGroup rgQuality = ViewBindings.findChildViewById(rootView, id);
      if (rgQuality == null) {
        break missingId;
      }

      id = R.id.switchAutoDownload;
      Switch switchAutoDownload = ViewBindings.findChildViewById(rootView, id);
      if (switchAutoDownload == null) {
        break missingId;
      }

      id = R.id.tvAbout;
      LinearLayout tvAbout = ViewBindings.findChildViewById(rootView, id);
      if (tvAbout == null) {
        break missingId;
      }

      id = R.id.tvClearHistory;
      LinearLayout tvClearHistory = ViewBindings.findChildViewById(rootView, id);
      if (tvClearHistory == null) {
        break missingId;
      }

      id = R.id.tvPrivacyPolicy;
      LinearLayout tvPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (tvPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.tvRateApp;
      LinearLayout tvRateApp = ViewBindings.findChildViewById(rootView, id);
      if (tvRateApp == null) {
        break missingId;
      }

      id = R.id.tvShareApp;
      LinearLayout tvShareApp = ViewBindings.findChildViewById(rootView, id);
      if (tvShareApp == null) {
        break missingId;
      }

      id = R.id.tvTermsOfService;
      LinearLayout tvTermsOfService = ViewBindings.findChildViewById(rootView, id);
      if (tvTermsOfService == null) {
        break missingId;
      }

      id = R.id.tvVersion;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, headerLayout, ivBack, rbHD,
          rbSD, rgQuality, switchAutoDownload, tvAbout, tvClearHistory, tvPrivacyPolicy, tvRateApp,
          tvShareApp, tvTermsOfService, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
